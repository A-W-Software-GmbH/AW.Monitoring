extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: "/health/status"
    check_collector_pipeline:
      enabled: true
      interval: "5m"
      exporter_failure_threshold: 5

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
  transform:
    error_mode: ignore # ignore|silent|propagate
    trace_statements:
      - context: span
        statements:
          - set(attributes["process.pid"], resource.attributes["process.pid"])
          - set(attributes["host.name"], resource.attributes["host.name"])
          - set(attributes["deployment.environment.name"], resource.attributes["deployment.environment.name"])

exporters:
  prometheus:
    endpoint: 0.0.0.0:28888
  otlphttp:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true
  otlp:
    endpoint: "http://tempo:4317"
    tls:
      insecure: true
  debug:
    verbosity: detailed # basic|normal|detailed

connectors:
  spanmetrics:
    namespace: traces.span.metrics
    metrics_flush_interval: 15s
    #metrics_expiration: 5m
    dimensions:
      - name: process.pid
      - name: host.name
      - name: deployment.environment.name
    resource_metrics_key_attributes:
      - service.name
      - process.pid
      - host.name
      - deployment.environment.name

service:
  extensions: ["health_check"]
  telemetry:
    metrics:
      level: detailed
      address: 0.0.0.0:8888
  pipelines:
    metrics:
      receivers: [otlp,spanmetrics]
      processors: [batch]
      exporters: [prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp]
    traces/to_metrics:
      receivers: [otlp]
      processors: [batch,transform]
      exporters: [spanmetrics]
